//kOS Contract Pack
CONTRACT_TYPE
{
    name = kOS_rover_easy
    
    //Contract text
    title = kOS: rover course near KSC in open terrain
    description = Automonously drive a rover to waypoints near KSC in relatively flat terrain.
    synopsis = We'd like you to make a rover program that can drive a vehicle in contact with the ground across given waypoints.  The vehicle must remain below 10 meters AGL during the drive, and get within 10 meters of the waypoints along the way, and hit the waypoints in order (alpha then beta then gamma, etc).
    completedMessage = Success!  Your driver script has accomplished the test course.  Hopefully this will allow us to use the script on future contracts to survey ground locations.
    
    // Companies to supply the contract
    // uncomment this when all agencies are ready:
    //   Remember to change the DialogBox Image below too if you change this.    
    agent = Turing Machinations 

    //Expiry - days before it goes away from the list if not accepted
    minExpiry = 5.0
    maxExpiry = 20.0
    
    //Deadline - days to complete it once accepted
    deadline = 40.0
    
    //Declinability/Cancellability
    cancellable = true
    declinable = true
    
    //Prestige -- Defaults to any
    prestige = Trivial
    
    //Target celestial body -- defaults to null/none
    //Makes a multiplier for reward payouts based on how hard the location is
    targetBody = Kerbin
    
    //Maximum times contract can be completed -- default is 0/unlimited
    maxCompletions = 2
    
    //Maximum simultaneous instances of this contract -- default is 0/unlimited
    maxSimultaneous = 1
    
    //Rewards
    // TODO: This probably still needs tweaking for proper balance.
    rewardScience = 50.0
    rewardReputation = 20.0
    rewardFunds = 40000.0
    failureReputation = 10.0
    failureFunds = 60000.0
    advanceFunds = 5000.0
    
    DATA 
    {
        type = double
        requiredValue = true
        KSCLongitude = -74.575278
    }
    DATA 
    {
        type = double
        requiredValue = true
        KSCLatitude = -0.1025
    }

    // Entire set of parameters must occur on the same vessel:
    PARAMETER
    {
        name = Run the course
        type = VesselParameterGroup


        // This is the actual course, which has to happen in the order given:
        // (e.g. Visiting Beta won't count until you've already visited Alpha).
        PARAMETER
        {
            name = Sequence
            type = Sequence

            // If the player touches a control between the waypoints, they have to start over:
            PARAMETER
            {
                name = hands_off_parameter
                type = PlayerControlsBanned
                title = Keep your hands off the manual controls during the drive.
                control = All
            }
            // If the player leaves the ground between the waypoints, they have to start over:
            PARAMETER
            {
                name = nearGround
                type = ReachState
                title = Keep altitude below 10m AGL
                maxTerrainAltitude = 10.0
            }

            // These are checkmarked once they get completed:
            PARAMETER
            {
                name = ReachWaypoint1
                type = VisitWaypoint

                // order of the waypoint in the WaypointGenerator list, even though
                // WaypointGenerator disallows the index field, it's got an implied
                // one based on the order it appears in the list in the file:
                index = 0

                title = Reach KSC Rover Point Alpha
                notes = Must be within 10 meters of Alpha.
                distance = 10.0
                showMessages = true
                targetBody = Kerbin

                rewardScience = 2.0
                rewardReputation = 1.0
                rewardFunds = 6000.0

                disableOnStateChange = true
            }
            PARAMETER
            {
                name = ReachWaypoint2
                type = VisitWaypoint

                // order of the waypoint in the WaypointGenerator list, even though
                // WaypointGenerator disallows the index field, it's got an implied
                // one based on the order it appears in the list in the file:
                index = 1

                title = Reach KSC Rover Point Beta
                notes = Must be within 10 meters of Beta.
                distance = 10.0
                showMessages = true
                targetBody = Kerbin

                rewardScience = 2.0
                rewardReputation = 1.0
                rewardFunds = 6000.0

                disableOnStateChange = true
            }
            PARAMETER
            {
                name = ReachWaypoint3
                type = VisitWaypoint

                // order of the waypoint in the WaypointGenerator list, even though
                // WaypointGenerator disallows the index field, it's got an implied
                // one based on the order it appears in the list in the file:
                index = 2

                title = Reach KSC Rover Point Gamma
                notes = Must be within 10 meters of Gamma.
                distance = 10.0
                showMessages = true
                targetBody = Kerbin

                rewardScience = 2.0
                rewardReputation = 1.0
                rewardFunds = 6000.0

                disableOnStateChange = true
            }
            PARAMETER
            {
                name = ReachWaypoint4
                type = VisitWaypoint

                // order of the waypoint in the WaypointGenerator list, even though
                // WaypointGenerator disallows the index field, it's got an implied
                // one based on the order it appears in the list in the file:
                index = 3

                title = Reach KSC Rover Point Delta
                notes = Must be within 10 meters of Delta.
                distance = 10.0
                showMessages = true
                targetBody = Kerbin

                rewardScience = 2.0
                rewardReputation = 1.0
                rewardFunds = 6000.0

                disableOnStateChange = true
            }
        }
    }

    BEHAVIOUR
    {
        name = WaypointGenerator
        type = WaypointGenerator

        // Select the first waypoint to be somewhere roughly within
        // a few km northwest of the KSC, so it will be in the big flat-ish
        // area.  Then make the other waypoints be near to it, to form the
        // course.  Other, harder versions of this contract to come later
        // will place the course across more severe terrain than this.
        // This is meant to be the beginnier first entry into this list
        // of contracts.

        WAYPOINT
        {
            name = KSC Rover Point
            clustered = true
            targetBody = Kerbin
            icon = default
            altitude = 0.0
            latitude =  ( @/KSCLatitude  + 0.10 ) + Random(-0.02, 0.02).
            longitude = ( @/KSCLongitude - 0.13 ) + Random(-0.05, 0.05).

        }
        RANDOM_WAYPOINT_NEAR
        {
            name = KSC Rover Point
            icon = default
            altitude = 0.0
            clustered = true
            targetBody = Kerbin
            waterAllowed = false
            nearIndex = 0
            minDistance = 200.0
            maxDistance = 800.0
        }
        RANDOM_WAYPOINT_NEAR
        {
            name = KSC Rover Point
            icon = default
            altitude = 0.0
            clustered = true
            targetBody = Kerbin
            waterAllowed = false
            nearIndex = 1
            minDistance = 200.0
            maxDistance = 800.0
        }
        RANDOM_WAYPOINT_NEAR
        {
            name = KSC Rover Point
            icon = default
            altitude = 0.0
            clustered = true
            targetBody = Kerbin
            waterAllowed = false
            nearIndex = 2
            minDistance = 200.0
            maxDistance = 800.0
        }
    }
    
    // Prevents the contract from appearing if you haven't unlocked any kOS CPU parts yet:
    REQUIREMENT
    {
        name = kos_part_unlocked
        type = PartModuleUnlocked
        partModule = kOSProcessor
    }
    
    // Prevents the contract from appearing if you haven't unlocked any rover wheel parts yet:
    REQUIREMENT
    {
        name = wheels_unlocked
        type = PartModuleUnlocked
        partModule = ModuleWheel
    }

    BEHAVIOUR
    {
        name = DialogBox
        type = DialogBox
        
        DIALOG_BOX
        {
            title = kOS contract status
            titleColor = #99FF99
            condition = VESSEL_PRELAUNCH
            width = 0.4
            // Change this if you change the agency above:
            IMAGE { url = ContractPacks/kOS-Contract-Pack/logos/turing_machinations_logo_big }
            INSTRUCTOR { name = Strategy_ScienceGuy }
            BREAK {}
            TEXT
            {
                fontSize = 12
                text = Don't forget that if you wish to complete the rover driving contract, then before you reach the first waypoint, you will have to have set all manual controls to idle, including the player throttle (Not its default of 50%).  Our client insists on this condition.  You can do this in a script too, by use of <i>SET SHIP:CONTROL:PILOTMAINTHROTTLE TO 0.</i>
            }
            BREAK {}
            TEXT
            {
                fontSize = 12
                text = You can operate manually up until you get to the first (Alpha) waypoint.  Once you get near the first one, you must operate under the autonomous conditions for the rest of the course:  Keep below 10m AGL, and keep your hands off the controls.  If you violate these conditions, you'll have to start over at the Alpha point again.
            }
            BREAK {}
            TEXT
            {
                fontSize = 12
                text = Note that typing at the terminal does not count as manual control for the purpose of this check.  You can run the course entirely by just typing interactively in the terminal if you can manage to accomplish it that way.
            }
        }
        
        DIALOG_BOX
        {
            title = kOS contract status
            titleColor = #99FF99
            condition = CONTRACT_SUCCESS
            animation = true_thumbsUp
            width = 0.4
            // Change this if you change the agency above:
            IMAGE { url = ContractPacks/kOS-Contract-Pack/logos/turing_machinations_logo_big }
            INSTRUCTOR { name = Strategy_ScienceGuy }
            BREAK {}
            TEXT
            {
                fontSize = 12
                text = Good Job!  Now you have the basics of rover driving in kOS. Are you ready to try a harder rover drive contract?
            }
        }
    }
}
