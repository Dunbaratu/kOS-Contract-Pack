//kOS Contract Pack
CONTRACT_TYPE
{
    name = kOS_hover_easy
    
    //Contract text
    title = Autonomous hover at a specific altitude
    description = Design a vehicle that will autonomously hover at a specific altitude for a specific period of time.
    synopsis = We'd like you to design a vehicle that can hover at a specific altitude above ground level for a specific period of time under the autonomous control of a kOS script, with the manual throttle control at zero.
    completedMessage = Congratulations! You've successfully hovered at the desired altitude for the required amount of time!
    
    //Companies to supply the contract
    agent = Lovelace Labs
    
    //Expiry
    minExpiry = 500.0
    maxExpiry = 1000.0
    
    //Deadline
    deadline = 500.0
    
    //Declinability/Cancellability
    cancellable = true
    declinable = true
    
    //Prestige -- Defaults to any
    prestige = Trivial
    
    //Target celestial body -- defaults to null/none
    //targetBody = Kerbin
    
    //Maximum times contract can be completed -- default is 0/unlimited
    maxCompletions = 0
    
    //Maximum simultaneous instances of this contract -- default is 0/unlimited
    maxSimultaneous = 1
    
    //Rewards
    rewardScience = 20.0
    rewardReputation = 10.0
    rewardFunds = 25000.0
    failureReputation = 10.0
    failureFunds = 10000.0
    advanceFunds = 10000.0
    
    //Completion parameters
    PARAMETER
    {
        name = altitude_parameter
        type = ReachState
        targetBody = Kerbin
        //Craft must hover at 500 meters AGL (+/- 10 meters)
        minTerrainAltitude = 490.0
        maxTerrainAltitude = 510.0
        //Craft must be flying at no more than 10 m/s surface velocity
        maxSpeed = 10.0
        situation = FLYING
        title = Altitude

        // Indicates that the above parameter must be completed only
        // under the following player controls condition or it 
        // doesn't count:
        PARAMETER
        {
            name = no_throttle_parameter
            type = PlayerControlsBanned
            title = Player throttle use banned
            // There can be multiple "control =" attributes here,
            // each on its own line, to ban more than one thing.
            // But for the sake of this contract, we only want to
            // ban throttle:
            control = Throttle
            control = Pitch // eraseme
        }

        PARAMETER
        {
            name = time_parameter
            type = Duration
            //Craft must hover in the altitude range for 30s
            duration = 30s
            preWaitText = Waiting for altitude range
            waitingText = Hover timer running
            completionText = Time requirement reached
        }
    }
    
    //This fails for some reason
    // PARAMETER
    // {
        // name = no_crew_parameter
        // type = HasCrewCapacity
        //Craft must not be able to hold crew
        // maxCapacity = 0
    // }
    
    //Contract availibility requirements
    REQUIREMENT
    {
        name = core_part_requirement
        type = PartModuleUnlocked
        //A part with the kOSProcessor module must be unlocked
        partModule = kOSProcessor
    }
    
    REQUIREMENT
    {
        name = liquid_engine_requirement
        type = Any
        //An LV-T45 or LV-T30 liquid engine must be unlocked
        
        REQUIREMENT
        {
            name = LVT45_requirement
            type = PartUnlocked
            part = liquidEngine2  //**VERIFY THAT THIS IS CORRECT**
        }
        
        REQUIREMENT
        {
            name = LVT30_requirement
            type = PartUnlocked
            part = liquidEngine  //**VERIFY THAT THIS IS CORRECT**
        }
    }
    
    REQUIREMENT
    {
        name = probe_core_requirement
        type = PartUnlocked
        //A probe core must be unlocked
        part = probeCoreSphere
    }
    
    REQUIREMENT
    {
        name = altitude_requirement
        type = AltitudeRecord
        //The player must have breached 30km
        minAltitude = 30000
    }
}
CONTRACT_TYPE
{
    name = kOS_hover_medium
    
    //Contract text
    title = Autonomous hover at a specific altitude
    description = Design a vehicle that will autonomously hover at a specific altitude for a specific period of time
    synopsis = We'd like you to design a vehicle that can hover at a specific altitude above ground level for a specific period of time under the autonomous control of a kOS script.  You are not allowed to touch the manual throttle control during the hovering.
    completedMessage = Congratulations! You've successfully hovered at the desired altitude for the required amount of time!
    
    //Agency -- Do we make our own or let CC assign a random one?
    //agent = 
    
    //Expiry
    minExpiry = 500.0
    maxExpiry = 1000.0
    
    //Deadline
    deadline = 500.0
    
    //Declinability/Cancellability
    cancellable = true
    declinable = true
    
    //Prestige -- Defaults to any
    prestige = Significant
    
    //Target celestial body -- defaults to null/none
    //targetBody = Kerbin
    
    //Maximum times contract can be completed -- default is 0/unlimited
    maxCompletions = 0
    
    //Maximum simultaneous instances of this contract -- default is 0/unlimited
    maxSimultaneous = 1
    
    //Rewards
    rewardScience = 40.0
    rewardReputation = 20.0
    rewardFunds = 50000.0
    failureReputation = 20.0
    failureFunds = 20000.0
    advanceFunds = 20000.0
    
    //Completion parameters
    PARAMETER
    {
        name = altitude_parameter
        type = ReachState
        targetBody = Kerbin
        //Craft must hover at 750 meters AGL (+/- 2.5 meters)
        minTerrainAltitude = 747.5
        maxTerrainAltitude = 752.5
        //Craft must be flying at no more than 10 m/s surface velocity
        maxSpeed = 10.0
        situation = FLYING
        title = Altitude
        
        PARAMETER
        {
            name = no_throttle_parameter
            type = PlayerControlsBanned
            title = Player throttle use banned
            // There can be multiple "control =" attributes here,
            // each on its own line, to ban more than one thing.
            // But for the sake of this contract, we only want to
            // ban throttle:
            control = Throttle
            control = Pitch // eraseme
        }
        PARAMETER
        {
            name = time_parameter
            type = Duration
            //Craft must hover in the altitude range for 45s
            duration = 45s
            preWaitText = Waiting for altitude range
            waitingText = Hover timer running
            completionText = Time requirement reached
        }
    }
    
    //PARAMETER
    //{
    //    name = recovery_parameter
    //    type = RecoverVessel
    //}
    
    //This fails for some reason
    // PARAMETER
    // {
        // name = no_crew_parameter
        // type = HasCrewCapacity
        //Craft must not be able to hold crew
        // maxCapacity = 0
    // }
    
    //Contract availibility requirements
    REQUIREMENT
    {
        name = core_part_requirement
        type = PartModuleUnlocked
        //A part with the kOSProcessor module must be unlocked
        partModule = kOSProcessor
    }
    
    REQUIREMENT
    {
        name = liquid_engine_requirement
        type = Any
        //An LV-T45 or LV-T30 liquid engine must be unlocked
        
        REQUIREMENT
        {
            name = LVT45_requirement
            type = PartUnlocked
            part = liquidEngine2  //**VERIFY THAT THIS IS CORRECT**
        }
        
        REQUIREMENT
        {
            name = LVT30_requirement
            type = PartUnlocked
            part = liquidEngine  //**VERIFY THAT THIS IS CORRECT**
        }
    }
    
    REQUIREMENT
    {
        name = probe_core_requirement
        type = PartUnlocked
        //A probe core must be unlocked
        part = probeCoreSphere
    }
    
    REQUIREMENT
    {
        name = altitude_requirement
        type = ReachSpace
        //The player must have breached the atmosphere
    }
}
CONTRACT_TYPE
{
    name = kOS_hover_hard
    
    //Contract text
    title = Autonomous hover at a specific altitude
    description = Design a vehicle that will autonomously hover at a specific altitude for a specific period of time
    synopsis = We'd like you to design a vehicle that can hover at a specific altitude above ground level for a specific period of time under the autonomous control of a kOS script.  For this contract you are NOT allowed to touch ANY manual controls during the hover duration.
    completedMessage = Congratulations! You've successfully hovered at the desired altitude for the required amount of time!
    
    //Agency -- Do we make our own or let CC assign a random one?
    //agent = 

    
    //Expiry
    minExpiry = 500.0
    maxExpiry = 1000.0
    
    //Deadline
    deadline = 500.0
    
    //Declinability/Cancellability
    cancellable = true
    declinable = true
    
    //Prestige -- Defaults to any
    prestige = Trivial
    
    //Target celestial body -- defaults to null/none
    //targetBody = Kerbin
    
    //Maximum times contract can be completed -- default is 0/unlimited
    maxCompletions = 0
    
    //Maximum simultaneous instances of this contract -- default is 0/unlimited
    maxSimultaneous = 1
    
    //Rewards
    rewardScience = 60.0
    rewardReputation = 30.0
    rewardFunds = 75000.0
    failureReputation = 30.0
    failureFunds = 30000.0
    advanceFunds = 30000.0
    
    //Completion parameters
    PARAMETER
    {
        name = altitude_parameter
        type = ReachState
        targetBody = Kerbin
        //Craft must hover at 1000 meters AGL (+/- 1 meter)
        minTerrainAltitude = 999.0
        maxTerrainAltitude = 1001.0
        //Craft must be flying at no more than 10 m/s surface velocity
        maxSpeed = 10.0
        situation = FLYING
        title = Altitude

        PARAMETER
        {
            name = no_plater_input_parameter
            type = PlayerControlsBanned
            title = No player manual inputs allowed during hover.
            control = All
        }
        
        PARAMETER
        {
            name = time_parameter
            type = Duration
            //Craft must hover in the altitude range for 60s
            duration = 60s
            preWaitText = Waiting for altitude range
            waitingText = Hover timer running
            completionText = Time requirement reached
        }
    }
    
    //PARAMETER
    //{
    //    name = recovery_parameter
    //    type = RecoverVessel
    //}
    
    //This fails for some reason
    // PARAMETER
    // {
        // name = no_crew_parameter
        // type = HasCrewCapacity
        //Craft must not be able to hold crew
        // maxCapacity = 0
    // }
    
    //Contract availibility requirements
    REQUIREMENT
    {
        name = core_part_requirement
        type = PartModuleUnlocked
        //A part with the kOSProcessor module must be unlocked
        partModule = kOSProcessor
    }
    
    REQUIREMENT
    {
        name = liquid_engine_requirement
        type = Any
        //An LV-T45 or LV-T30 liquid engine must be unlocked
        
        REQUIREMENT
        {
            name = LVT45_requirement
            type = PartUnlocked
            part = liquidEngine2  //**VERIFY THAT THIS IS CORRECT**
        }
        
        REQUIREMENT
        {
            name = LVT30_requirement
            type = PartUnlocked
            part = liquidEngine  //**VERIFY THAT THIS IS CORRECT**
        }
    }
    
    REQUIREMENT
    {
        name = probe_core_requirement
        type = PartUnlocked
        //A probe core must be unlocked
        part = probeCoreSphere
    }
    
    REQUIREMENT
    {
        name = altitude_requirement
        type = Orbit
        //The player must have made orbit
        targetBody = Kerbin
    }
}

